{"remainingRequest":"D:\\github\\JYpc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\github\\JYpc\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\github\\JYpc\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\github\\JYpc\\src\\views\\secondaryHome\\index.vue?vue&type=template&id=18b6c30c&scoped=true&","dependencies":[{"path":"D:\\github\\JYpc\\src\\views\\secondaryHome\\index.vue","mtime":1591863490776},{"path":"D:\\github\\JYpc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591605171767},{"path":"D:\\github\\JYpc\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1591605185873},{"path":"D:\\github\\JYpc\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1591605171767},{"path":"D:\\github\\JYpc\\node_modules\\vue-loader\\lib\\index.js","mtime":1591605185872}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}